name: Autograding

on:
  push:
    branches: ['*']
    paths-ignore: ['feedback.md']

jobs:
  build:
    runs-on: self-hosted
    steps:
      # 1) Checkout repo
      - uses: actions/checkout@v2

      # 1.5) Ensure logs dir + blank autograder_output.txt
      - name: Prepare logs directory
        run: |
          mkdir -p $HOME/logs
          : > $HOME/logs/autograder_output.txt

      # 2) Autograde
      - uses: education/autograding@v1
        id: autograde
        continue-on-error: true

      # 3) Copy repo into logs (for control_code prompt)
      - name: Copy repo to logs
        run: |
          find $HOME/logs/ -mindepth 1 ! -name 'autograder_output.txt' -delete
          REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          cp -r "/actions-runner/_work/$REPO_NAME/$REPO_NAME"/* "$HOME/logs/"

      # 3.5) ***Sync latest control_code.py into $HOME***
      - name: Update control_code.py for runner
        run: |
          REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          cp "/actions-runner/_work/$REPO_NAME/$REPO_NAME/control_code.py" "$HOME/"

      # 4) Execute control_code.py
      - name: Run feedback generator
        if: always()
        run: |
          REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          python3 "$HOME/control_code.py" "$REPO_NAME"

      # 5) Git config
      - name: Configure git identity
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "actions@github.com"

      # 6) Commit & push feedback.md
      - name: Commit feedback.md
        if: always()
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp "$HOME/logs/feedback.md" .
          git add feedback.md
          git commit -m "Add feedback file" || true
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}"
