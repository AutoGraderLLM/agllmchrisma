name: Autograding

on:
  push:
    branches:
      - '*'                # Trigger on push to any branch
    paths-ignore:
      - 'feedback.md'      # Ignore changes to feedback.md

jobs:
  build:
    name: Autograding
    runs-on: self-hosted

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v2

      # Step 1.5: Create autograder_output.txt file and logs directory
      - name: Create autograder_output.txt and logs directory
        run: |
          mkdir -p $HOME/logs/
          touch $HOME/logs/autograder_output.txt

      # Step 2: Run autograding
      - uses: education/autograding@v1
        id: autograde
        continue-on-error: true

      # Step 3: Clone the working directory to logs
      - name: Clone Working Directory
        run: |
          find $HOME/logs/ -mindepth 1 ! -name 'autograder_output.txt' -delete
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')
          cp -r /actions-runner/_work/$REPO_NAME/$REPO_NAME/* $HOME/logs/

      # Step 4: Run Python script
      - name: Run Python script
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')
          pwd
          ls
          python3 $HOME/control_code.py $REPO_NAME
        if: always()  # always run, even on failure

      # Step 5: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Step 6: Stage, commit, and push Feedback.md file
      - name: Stage, commit, and push Feedback.md
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp $HOME/logs/feedback.md .
          git add feedback.md
          git commit -m "Add Feedback file"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
        if: always()
